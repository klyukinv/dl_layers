import dataclasses
import numpy as np


@dataclasses.dataclass
class Case:
    input: np.ndarray
    next_layer_grad: np.ndarray
    torch_layer_output: np.ndarray
    torch_layer_grad: np.ndarray

    def __str__(self) -> str:
        return 'Softmax input {}'.format(self.input)


cases = [
    Case(input=np.array([[-2.5091977, 9.014286, 4.6398787, 1.9731697],
                         [-6.879627, -6.88011, -8.838327, 7.323523]], dtype=np.float32),
         next_layer_grad=np.array([[3.8256936, 3.247805, 111.71914, 2.3710265],
                                   [1.6938239, 6.640375, 7.7547727, 7.6879864]],
                                  dtype=np.float32),
         torch_layer_output=np.array([[9.7633601e-06, 9.8669863e-01, 1.2428067e-02, 8.6350850e-04],
                                      [6.7865614e-07, 6.7832877e-07, 9.5718775e-08, 9.9999857e-01]],
                                     dtype=np.float32),
         torch_layer_grad=np.array([[-7.5124099e-06, -1.3294163e+00, 1.3313441e+00, -1.9205434e-03],
                                    [-4.0679720e-06, -7.1062163e-07, 6.3931580e-09, 4.7683648e-06]],
                                   dtype=np.float32)),
    Case(input=np.array([[-3.9151552, 0.49512863, -1.3610996, -4.1754174],
                         [2.237058, -7.2101226, -4.157107, -2.672763]],
                        dtype=np.float32),
         next_layer_grad=np.array([[4.286961, 2.490084, 9.791742, 3.802068],
                                   [2.3917947, 30.504227, 2.3322296, 8.309288]], dtype=np.float32),
         torch_layer_output=np.array([[1.0317486e-02, 8.4905517e-01, 1.3267413e-01, 7.9532294e-03],
                                      [9.9095845e-01, 7.8198238e-05, 1.6561698e-03, 7.3071374e-03]],
                                     dtype=np.float32),
         torch_layer_grad=np.array([[8.2453443e-03, -8.4711510e-01, 8.3637023e-01, 2.4994540e-03],
                                    [-4.4929646e-02, 2.1947972e-03, -1.7373991e-04, 4.2908635e-02]],
                                   dtype=np.float32)),
    Case(input=np.array([[-8.698968, 8.977711, 9.31264, 6.167947],
                         [-3.9077246, -8.046557, 3.6846604, -1.1969501]], dtype=np.float32),
         next_layer_grad=np.array([[12.79045, 3.1522555, 45.390846, 1.7165831],
                                   [6.774409, 2.6460717, 5.6240582, 3.370869]], dtype=np.float32),
         torch_layer_output=np.array([[8.5609777e-09, 4.0682477e-01, 5.6867665e-01, 2.4498666e-02],
                                      [5.0022634e-04, 7.9743304e-06, 9.9196786e-01, 7.5238678e-03]],
                                     dtype=np.float32),
         torch_layer_grad=np.array([[-1.2282206e-07, -9.7576618e+00, 1.0380432e+01, -6.2277079e-01],
                                    [5.8364001e-04, -2.3616660e-05, 1.6269553e-02, -1.6829297e-02]],
                                   dtype=np.float32)),
    Case(input=np.array([[0.9342056, -6.302911, 9.391692, 5.5026565],
                         [8.789979, 7.896547, 1.9579996, 8.437485]], dtype=np.float32),
         next_layer_grad=np.array([[7.4021297, 3.3422973, 14.483136, 2.0134397],
                                   [4.748199, 6.801266, 2.226902, 5.17309]], dtype=np.float32),
         torch_layer_output=np.array([[2.0800412e-04, 1.4963460e-07, 9.7974145e-01, 2.0050479e-02],
                                      [4.7320253e-01, 1.9365753e-01, 5.1045348e-04, 3.3262947e-01]],
                                     dtype=np.float32),
         torch_layer_grad=np.array([[-1.4205660e-03, -1.6294223e-06, 2.4640229e-01, -2.4498074e-01],
                                    [-2.5441083e-01, 2.9347461e-01, -1.5614431e-03, -3.7502404e-02]],
                                   dtype=np.float32)),
    Case(input=np.array([[-4.38131, 0.85392165, -7.1815157, 6.0439396],
                         [-8.508987, 9.737739, 5.4448953, -6.0256863]],
                        dtype=np.float32),
         next_layer_grad=np.array([[408.69257, 2.7675717, 3.1927915, 3.0957832],
                                   [1.7110081, 17.82235, 3.6813834, 11.389146]],
                                  dtype=np.float32),
         torch_layer_output=np.array([[2.9508361e-05, 5.5408604e-03, 1.7940354e-06, 9.9442780e-01],
                                      [1.1739570e-08, 9.8651809e-01, 1.3481769e-02, 1.4064899e-07]],
                                     dtype=np.float32),
         torch_layer_grad=np.array([[1.1968197e-02, -1.8748138e-03, 1.5582681e-07, -1.0093398e-02],
                                    [-1.8690211e-07, 1.8807684e-01, -1.8807498e-01, -8.7800930e-07]],
                                   dtype=np.float32)),
    Case(input=np.array([[7.2620687, 2.4659626, -3.3820395, -8.728833],
                         [-3.7803535, -3.4963336, 4.5921235, 2.7511494]], dtype=np.float32),
         next_layer_grad=np.array([[2.4709594, 4.642519, 18.330872, 3.0736525],
                                   [3.4002051, 4.608819, 3.3552985, 5.2386556]], dtype=np.float32),
         torch_layer_output=np.array([[9.9178231e-01, 8.1939604e-03, 2.3644985e-05, 1.1263047e-07],
                                      [1.9939804e-04, 2.6489206e-04, 8.6266315e-01, 1.3687254e-01]],
                                     dtype=np.float32),
         torch_layer_grad=np.array([[-1.8019384e-02, 1.7644800e-02, 3.7457779e-04, 6.5835252e-08],
                                    [-4.2514486e-05, 2.6367349e-04, -2.2267129e-01, 2.2245023e-01]],
                                   dtype=np.float32)),
    Case(input=np.array([[0.4546566, -1.4491796, -9.491617, -7.8421717],
                         [-9.371416, 2.7282083, -3.7128804, 0.17141382]],
                        dtype=np.float32),
         next_layer_grad=np.array([[2.5593638, 9.317551, 5.660062, 3.0743024],
                                   [3.307504, 9.830498, 2.6117241, 4.6938643]], dtype=np.float32),
         torch_layer_output=np.array([[8.7010008e-01, 1.2964137e-01, 4.1682848e-05, 2.1692143e-04],
                                      [5.1536708e-06, 9.2665249e-01, 1.4777046e-03, 7.1864627e-02]],
                                     dtype=np.float32),
         torch_layer_grad=np.array([[-7.6253974e-01, 7.6252532e-01, 9.2715840e-05, -7.8404744e-05],
                                    [-3.1659780e-05, 3.5198224e-01, -1.0105920e-02, -3.4184498e-01]],
                                   dtype=np.float32)),
    Case(input=np.array([[8.593953, 6.1624074, 2.668075, 7.4292116],
                         [6.0734415, -6.268599, 7.85118, 0.78684485]],
                        dtype=np.float32),
         next_layer_grad=np.array([[2.6399317, 2.3787606, 6.7030296, 19.36892],
                                   [10.238826, 5.464167, 2.8529906, 2.7114038]], dtype=np.float32),
         torch_layer_output=np.array([[7.1297508e-01, 6.2671117e-02, 1.9032604e-03, 2.2245058e-01],
                                      [1.4447683e-01, 6.3054762e-07, 8.5479164e-01, 7.3090079e-04]],
                                     dtype=np.float32),
         torch_layer_grad=np.array([[-2.6470900e+00, -2.4904935e-01, 6.6682522e-04, 2.8954720e+00],
                                    [9.1292810e-01, 9.7368923e-07, -9.1204590e-01, -8.8334270e-04]],
                                   dtype=np.float32)),
    Case(input=np.array([[-9.860957, 0.21494605, -1.6517799, -5.5578437],
                         [-7.6026926, -3.2476966, 8.858194, -3.5359414]],
                        dtype=np.float32),
         next_layer_grad=np.array([[4.929198, 3.6374857, 7.0324893, 2.6314762],
                                   [2.0908744, 7.9924464, 4.0469837, 6.6882734]], dtype=np.float32),
         torch_layer_output=np.array([[3.6346621e-05, 8.6372024e-01, 1.3355628e-01, 2.6870903e-03],
                                      [7.0977869e-08, 5.5268033e-06, 9.9999022e-01, 4.1427729e-06]],
                                     dtype=np.float32),
         torch_layer_grad=np.array([[3.0565483e-05, -3.8933724e-01, 3.9322117e-01, -3.9144922e-03],
                                    [-1.3884276e-07, 2.1805618e-05, -3.2424610e-05, 1.0942129e-05]],
                                   dtype=np.float32)),
    Case(input=np.array([[-4.30319, -9.262261, 2.1912866, 0.05358046],
                         [-8.970425, -4.4270706, 8.165318, -5.208762]],
                        dtype=np.float32),
         next_layer_grad=np.array([[12.851065, 3.8043578, 1.889162, 7.6926785],
                                   [3.5701268, 3.150666, 10.097769, 3.295187]], dtype=np.float32),
         torch_layer_output=np.array([[1.35045731e-03, 9.47945591e-06, 8.93297851e-01, 1.05342194e-01],
                                      [3.61442787e-08, 3.39776329e-06, 9.99994993e-01, 1.55492285e-06]],
                                     dtype=np.float32),
         torch_layer_grad=np.array([[1.3957957e-02, 1.2219198e-05, -5.5936253e-01, 5.4539233e-01],
                                    [-2.3593564e-07, -2.3604491e-05, 3.5285771e-05, -1.0577435e-05]],
                                   dtype=np.float32)),
    Case(input=np.array([[-2.6443374, 2.6461165, 2.6705942, 0.7154937],
                         [-8.194204, 6.70605, -3.5843987, -6.26963]], dtype=np.float32),
         next_layer_grad=np.array([[32.515408, 2.243757, 1.9567443, 79.92729],
                                   [3.042666, 6.8792815, 2.4150555, 8.935941]], dtype=np.float32),
         torch_layer_output=np.array([[2.3171292e-03, 4.5979610e-01, 4.7118974e-01, 6.6697024e-02],
                                      [3.3797605e-07, 9.9996340e-01, 3.3954613e-05, 2.3158912e-06]],
                                     dtype=np.float32),
         torch_layer_grad=np.array([[5.8288503e-02, -2.3523932e+00, -2.5459225e+00, 4.8400273e+00],
                                    [-1.2966341e-06, 1.4829093e-04, -1.5157604e-04, 4.7633425e-06]],
                                   dtype=np.float32)),
    Case(input=np.array([[3.8187547, -2.2652931, 8.7346, -7.2495813],
                         [-3.178673, -7.73053, 8.493873, 7.5467873]], dtype=np.float32),
         next_layer_grad=np.array([[8.87933, 3.4703095, 2.8026023, 4.125262],
                                   [3.3263843, 7.2847, 18.923405, 1.9636539]], dtype=np.float32),
         torch_layer_output=np.array([[7.27606611e-03, 1.65816691e-05, 9.92707193e-01, 1.13495695e-07],
                                      [6.14223563e-06, 6.47857803e-08, 7.20524192e-01, 2.79469609e-01]],
                                     dtype=np.float32),
         torch_layer_grad=np.array([[4.38928828e-02, 1.03383645e-05, -4.39031646e-02,
                                     1.45096735e-07],
                                    [-6.66874112e-05, -4.46948917e-07, 3.41516280e+00,
                                     -3.41509628e+00]], dtype=np.float32)),
    Case(input=np.array([[8.008361, 2.662029, -3.2194042, -3.0158086],
                         [4.5191135, 7.9422054, 7.7417283, 5.597511]], dtype=np.float32),
         next_layer_grad=np.array([[2.7823462, 21.23075, 11.052211, 1.9880321],
                                   [2.276605, 150.11327, 13.605779, 2.0807774]],
                                  dtype=np.float32),
         torch_layer_output=np.array([[9.9522758e-01, 4.7428575e-03, 1.3236281e-05, 1.6225058e-05],
                                      [1.6751066e-02, 5.1365602e-01, 4.2034537e-01, 4.9247529e-02]],
                                     dtype=np.float32),
         torch_layer_grad=np.array([[-8.71764719e-02, 8.70827064e-02, 1.08302826e-04,
                                     -1.43090192e-05],
                                    [-1.35163867e+00, 3.44904366e+01, -2.91553802e+01,
                                     -3.98341274e+00]], dtype=np.float32)),
    Case(input=np.array([[-9.898768, -6.7838387, 0.9746758, 3.837904],
                         [3.039225, -5.5146136, 4.2435846, -5.255018]], dtype=np.float32),
         next_layer_grad=np.array([[7.900276, 3.4437735, 3.9572313, 3.0271742],
                                   [2.5658135, 2.9690068, 18.01245, 4.5886307]], dtype=np.float32),
         torch_layer_output=np.array([[1.0235733e-06, 2.3063007e-05, 5.4000244e-02, 9.4597572e-01],
                                      [2.3067704e-01, 4.4475371e-05, 7.6922083e-01, 5.7658086e-05]],
                                     dtype=np.float32),
         torch_layer_grad=np.array([[4.9365544e-06, 8.4493895e-06, 4.7510434e-02, -4.7524054e-02],
                                    [-2.7409062e+00, -5.1052455e-04, 2.7419858e+00, -5.6846207e-04]],
                                   dtype=np.float32)),
    Case(input=np.array([[-4.6959524, -5.1202073, 9.460211, -2.1380455],
                         [7.840931, 2.6227725, 5.896226, 0.05274186]],
                        dtype=np.float32),
         next_layer_grad=np.array([[3.44445, 4.03461, 10.177659, 2.7505167],
                                   [4.016319, 46.375755, 1.7470484, 6.367043]], dtype=np.float32),
         torch_layer_output=np.array([[7.1129853e-07, 4.6537235e-07, 9.9998963e-01, 9.1819911e-06],
                                      [8.7042701e-01, 4.7153598e-03, 1.2449666e-01, 3.6088171e-04]],
                                     dtype=np.float32),
         torch_layer_grad=np.array([[-4.7892677e-06, -2.8587697e-06, 7.6293152e-05, -6.8195252e-05],
                                    [7.1312979e-02, 2.0012631e-01, -2.7231672e-01, 8.7789993e-04]],
                                   dtype=np.float32)),
    Case(input=np.array([[8.809172, 9.078571, 8.297288, -2.596826],
                         [-9.690867, 8.566371, -1.4363171, 9.3330965]], dtype=np.float32),
         next_layer_grad=np.array([[2.5904155, 2.926317, 8.477451, 6.4819283],
                                   [2.225674, 5.9773464, 11.1765995, 3.4022062]], dtype=np.float32),
         torch_layer_output=np.array([[3.4381333e-01, 4.5011294e-01, 2.0606984e-01, 3.8261383e-06],
                                      [3.7350159e-09, 3.1718332e-01, 1.4361440e-05, 6.8280238e-01]],
                                     dtype=np.float32),
         torch_layer_grad=np.array([[-4.6908134e-01, -4.6291748e-01, 9.3198937e-01, 9.6692784e-06],
                                    [-7.4455135e-09, 5.5768341e-01, 9.9919576e-05, -5.5778354e-01]],
                                   dtype=np.float32)),
    Case(input=np.array([[8.723096, 3.920596, 1.4012234, -8.05647],
                         [2.3001444, 9.801077, -7.19832, 0.36659303]],
                        dtype=np.float32),
         next_layer_grad=np.array([[3.4394052, 4.0736628, 4.3293734, 4.2956724],
                                   [6.3215957, 7.740533, 2.807841, 2.805234]], dtype=np.float32),
         torch_layer_output=np.array([[9.9120784e-01, 8.1370240e-03, 6.5511238e-04, 5.1155450e-08],
                                      [5.5221957e-04, 9.9936801e-01, 4.1398156e-08, 7.9869562e-05]],
                                     dtype=np.float32),
         torch_layer_grad=np.array([[-5.6937146e-03, 5.1142280e-03, 5.7926605e-04, 4.3508887e-08],
                                    [-7.8291504e-04, 1.1760903e-03, -2.0415561e-07, -3.9408618e-04]],
                                   dtype=np.float32)),
    Case(input=np.array([[7.3414464, 8.2648115, 0.22684798, 0.03032589],
                         [5.9659038, 2.9992785, 4.0393376, 5.9158535]], dtype=np.float32),
         next_layer_grad=np.array([[1.9073653, 5.0224547, 4.519815, 18.062677],
                                   [2.805673, 45.140854, 3.4846907, 2.989922]], dtype=np.float32),
         torch_layer_output=np.array([[2.8415307e-01, 7.1542603e-01, 2.3105819e-04, 1.8983360e-04],
                                      [4.6548307e-01, 2.3961551e-02, 6.7796439e-02, 4.4275892e-01]],
                                     dtype=np.float32),
         torch_layer_grad=np.array([[-6.3431108e-01, 6.3158023e-01, 8.7839820e-05, 2.6430581e-03],
                                    [-5.3159541e-01, 9.8705184e-01, -3.1390548e-02, -4.2406580e-01]],
                                   dtype=np.float32)),
    Case(input=np.array([[-4.269175, 1.8166652, -9.389995, -9.2530365],
                         [6.452011, -2.7961872, -7.45879, 0.4448652]], dtype=np.float32),
         next_layer_grad=np.array([[2.2000866, 7.849339, 2.7196634, 19.84889],
                                   [34.0759, 3.3143613, 3.2574673, 2.7628157]], dtype=np.float32),
         torch_layer_output=np.array([[2.2696229e-03, 9.9770123e-01, 1.3552212e-05, 1.5541393e-05],
                                      [9.9744821e-01, 9.6039250e-05, 9.0678907e-07, 2.4548222e-03]],
                                     dtype=np.float32),
         torch_layer_grad=np.array([[-1.2792836e-02, 1.2676120e-02, -6.9346264e-05, 1.8668720e-04],
                                    [7.9649292e-02, -2.9466462e-03, -2.7873410e-05, -7.6672032e-02]],
                                   dtype=np.float32)),
    Case(input=np.array([[4.5218267, 9.517041, 0.32600698, -3.5408704],
                         [5.9037237, -4.583355, -1.2205716, -8.430872]],
                        dtype=np.float32),
         next_layer_grad=np.array([[99.403534, 2.61773, 3.0143702, 3.620757],
                                   [2.418193, 5.7066336, 6.321567, 3.9518692]], dtype=np.float32),
         torch_layer_output=np.array([[6.7240456e-03, 9.9317259e-01, 1.0125332e-04, 2.1185838e-06],
                                      [9.9916697e-01, 2.7871329e-05, 8.0462953e-04, 5.9456897e-07]],
                                     dtype=np.float32),
         torch_layer_grad=np.array([[6.4641595e-01, -6.4639080e-01, -2.5737989e-05, 7.4615014e-07],
                                    [-3.2307392e-03, 9.1563088e-05, 3.1381682e-03, 9.0995377e-07]],
                                   dtype=np.float32)),
    Case(input=np.array([[0.9845333, 4.2919183, 3.2039475, -4.401322],
                         [9.097305, 4.7579384, 1.0870811, 2.2344148]], dtype=np.float32),
         next_layer_grad=np.array([[4.244875, 7.189855, 5.003614, 2.350279],
                                   [15.08999, 1.8712212, 4.7214155, 5.332776]], dtype=np.float32),
         torch_layer_output=np.array([[2.6652360e-02, 7.2797209e-01, 2.4525340e-01, 1.2209236e-04],
                                      [9.8578227e-01, 1.2859317e-02, 3.2732921e-04, 1.0310165e-03]],
                                     dtype=np.float32),
         torch_layer_grad=np.array([[-0.06209241, 0.44789568, -0.38528726, -0.00051576],
                                    [0.18083116, -0.16762543, -0.00333389, -0.00987072]],
                                   dtype=np.float32)),
    Case(input=np.array([[7.1092114, 4.0731573, -0.5165234, -8.043317],
                         [-0.1676825, -0.5305646, -6.5359626, -1.322967]], dtype=np.float32),
         next_layer_grad=np.array([[4.2527785, 2.7518911, 2.668508, 37.40844],
                                   [6.3001046, 3.7709694, 4.690774, 2.7555478]], dtype=np.float32),
         torch_layer_output=np.array([[9.5373255e-01, 4.5802064e-02, 4.6517039e-04, 2.5047649e-07],
                                      [4.9693108e-01, 3.4569928e-01, 8.5228984e-04, 1.5651734e-01]],
                                     dtype=np.float32),
         torch_layer_grad=np.array([[6.6258006e-02, -6.5561764e-02, -7.0463924e-04, 8.3221148e-06],
                                    [7.1084833e-01, -3.7980548e-01, -1.5243544e-04, -3.3089021e-01]],
                                   dtype=np.float32)),
    Case(input=np.array([[3.1738727, -6.7413116, -8.588625, 2.8483856],
                         [-9.469774, 1.7155117, 8.804605, 1.5094836]], dtype=np.float32),
         next_layer_grad=np.array([[5.243394, 3.1639442, 4.441495, 3.7303247],
                                   [3.3927011, 8.272693, 3.3230755, 3.528035]], dtype=np.float32),
         torch_layer_output=np.array([[5.8064163e-01, 2.8694487e-05, 4.5239753e-06, 4.1932514e-01],
                                      [1.1557958e-08, 8.3289365e-04, 9.9848926e-01, 6.7781709e-04]],
                                     dtype=np.float32),
         torch_layer_grad=np.array([[3.6843511e-01, -4.1461200e-05, -7.5716844e-07, -3.6839312e-01],
                                    [7.5547857e-10, 4.1189557e-03, -4.2548175e-03, 1.3603663e-04]],
                                   dtype=np.float32)),
    Case(input=np.array([[-6.0841775, -8.612774, -7.98444, -9.635564],
                         [-8.111141, 3.6601355, -8.576227, -3.6204875]], dtype=np.float32),
         next_layer_grad=np.array([[2.3251603, 84.41372, 2.411966, 6.969797],
                                   [19.644735, 3.3316965, 3.690823, 2.6454594]], dtype=np.float32),
         torch_layer_output=np.array([[7.9492199e-01, 6.3411646e-02, 1.1886419e-01, 2.2802215e-02],
                                      [7.7178274e-06, 9.9929905e-01, 4.8474217e-06, 6.8827358e-04]],
                                     dtype=np.float32),
         torch_layer_grad=np.array([[-4.2302547e+00, 4.8679194e+00, -6.2222916e-01, -1.5436187e-02],
                                    [1.2590387e-04, 3.4474986e-04, 1.7425102e-06, -4.7208142e-04]],
                                   dtype=np.float32)),
    Case(input=np.array([[4.701421, 6.0696187, -4.3593087, -6.451209],
                         [5.0122952, 6.136695, 9.810102, -1.7476465]], dtype=np.float32),
         next_layer_grad=np.array([[6.5050383, 3.1168876, 7.100842, 2.6000245],
                                   [3.2534707, 6.510162, 3.7194412, 3.7013414]], dtype=np.float32),
         torch_layer_output=np.array([[2.0290579e-01, 7.9706776e-01, 2.3565117e-05, 2.9091668e-06],
                                      [7.9793315e-03, 2.4563320e-02, 9.6744812e-01, 9.2504142e-06]],
                                     dtype=np.float32),
         torch_layer_grad=np.array([[5.4796380e-01, -5.4803842e-01, 7.7679724e-05, -3.5038915e-06],
                                    [-4.2354413e-03, 6.6956900e-02, -6.2720649e-02, -7.6714429e-07]],
                                   dtype=np.float32)),
]
