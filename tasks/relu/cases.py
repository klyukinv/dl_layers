import dataclasses
import numpy as np


@dataclasses.dataclass
class Case:
    input: np.ndarray
    next_layer_grad: np.ndarray
    torch_layer_output: np.ndarray
    torch_layer_grad: np.ndarray

    def __str__(self) -> str:
        return 'ReLU input {}'.format(self.input)


cases = [
    Case(input=np.array([[-1.2545989, 4.507143, 2.3199394, 0.98658484],
                         [-3.4398136, -3.440055, -4.4191637, 3.6617615]],
                        dtype=np.float32),
         next_layer_grad=np.array([[1.0111501, 2.0807257, -4.794155, 4.6990986],
                                   [3.3244264, -2.8766088, -3.1817503, -3.1659548]], dtype=np.float32),
         torch_layer_output=np.array([[0., 4.507143, 2.3199394, 0.98658484],
                                      [0., 0., 0., 3.6617615]], dtype=np.float32),
         torch_layer_grad=np.array([[0., 2.0807257, -4.794155, 4.6990986],
                                    [0., 0., 0., -3.1659548]], dtype=np.float32)),
    Case(input=np.array([[-1.9575776, 0.24756432, -0.6805498, -2.0877087],
                         [1.118529, -3.6050613, -2.0785534, -1.3363816]],
                        dtype=np.float32),
         next_layer_grad=np.array([[-0.43930015, 2.8517597, -3.0032623, 0.14234439],
                                   [0.9241457, -4.5354958, 1.0754485, -3.2947588]],
                                  dtype=np.float32),
         torch_layer_output=np.array([[0., 0.24756432, 0., 0.],
                                      [1.118529, 0., 0., 0.]], dtype=np.float32),
         torch_layer_grad=np.array([[0., 2.8517597, 0., 0.],
                                    [0.9241457, 0., 0., 0.]], dtype=np.float32)),
    Case(input=np.array([[-4.349484, 4.4888554, 4.65632, 3.0839734],
                         [-1.9538623, -4.0232787, 1.8423302, -0.59847504]],
                        dtype=np.float32),
         next_layer_grad=np.array([[-3.7796175, -0.0482309, -4.6561146, 4.093204],
                                   [-2.4122002, 1.6252228, -1.8828893, 0.20068021]],
                                  dtype=np.float32),
         torch_layer_output=np.array([[0., 4.4888554, 4.65632, 3.0839734],
                                      [0., 0., 1.8423302, 0.]], dtype=np.float32),
         torch_layer_grad=np.array([[0., -0.0482309, -4.6561146, 4.093204],
                                    [0., 0., -1.8828893, 0.]], dtype=np.float32)),
    Case(input=np.array([[0.4671028, -3.1514554, 4.695846, 2.7513282],
                         [4.3949895, 3.9482734, 0.9789998, 4.2187424]], dtype=np.float32),
         next_layer_grad=np.array([[-4.115075, -3.0401714, -4.547727, -1.7466967],
                                   [-1.1132271, -2.2865098, 3.287375, -1.4324667]], dtype=np.float32),
         torch_layer_output=np.array([[0.4671028, 0., 4.695846, 2.7513282],
                                      [4.3949895, 3.9482734, 0.9789998, 4.2187424]], dtype=np.float32),
         torch_layer_grad=np.array([[-4.115075, 0., -4.547727, -1.7466967],
                                    [-1.1132271, -2.2865098, 3.287375, -1.4324667]], dtype=np.float32)),
    Case(input=np.array([[-2.190655, 0.42696083, -3.5907578, 3.0219698],
                         [-4.2544937, 4.8688693, 2.7224476, -3.0128431]],
                        dtype=np.float32),
         next_layer_grad=np.array([[-4.944779, 3.1546142, 2.0685735, 2.2900717],
                                   [2.7127035, -4.2595534, -1.4153427, -3.8413093]], dtype=np.float32),
         torch_layer_output=np.array([[0., 0.42696083, 0., 3.0219698],
                                      [0., 4.8688693, 2.7224476, 0.]], dtype=np.float32),
         torch_layer_grad=np.array([[0., 3.1546142, 0., 2.2900717],
                                    [0., -4.2595534, -1.4153427, 0.]], dtype=np.float32)),
    Case(input=np.array([[3.6310344, 1.2329813, -1.6910198, -4.3644166],
                         [-1.8901768, -1.7481668, 2.2960618, 1.3755747]], dtype=np.float32),
         next_layer_grad=np.array([[3.8721275, -0.27785075, -3.8040576, 2.132448],
                                   [2.6078506, 0.612772, 2.7096717, -0.06204404]],
                                  dtype=np.float32),
         torch_layer_output=np.array([[3.6310344, 1.2329813, 0., 0.],
                                      [0., 0., 2.2960618, 1.3755747]], dtype=np.float32),
         torch_layer_grad=np.array([[3.8721275, -0.27785075, 0., 0.],
                                    [0., 0., 2.7096717, -0.06204404]],
                                   dtype=np.float32)),
    Case(input=np.array([[0.2273283, -0.7245898, -4.7458086, -3.9210858],
                         [-4.685708, 1.3641042, -1.8564402, 0.08570691]],
                        dtype=np.float32),
         next_layer_grad=np.array([[4.0756645, -2.5070777, -0.8961708, 2.5555115],
                                   [-2.7120183, -4.230201, -2.1024854, -3.387787]], dtype=np.float32),
         torch_layer_output=np.array([[0.2273283, 0., 0., 0.],
                                      [0., 1.3641042, 0., 0.08570691]], dtype=np.float32),
         torch_layer_grad=np.array([[4.0756645, 0., 0., 0.],
                                    [0., -4.230201, 0., -3.387787]], dtype=np.float32)),
    Case(input=np.array([[4.2969766, 3.0812037, 1.3340375, 3.7146058],
                         [3.0367208, -3.1342995, 3.92559, 0.39342242]],
                        dtype=np.float32),
         next_layer_grad=np.array([[3.0744016, 3.960913, -1.8199652, -3.8994808],
                                   [-2.7206483, -0.7289221, 3.1801476, 3.6073058]], dtype=np.float32),
         torch_layer_output=np.array([[4.2969766, 3.0812037, 1.3340375, 3.7146058],
                                      [3.0367208, 0., 3.92559, 0.39342242]], dtype=np.float32),
         torch_layer_grad=np.array([[3.0744016, 3.960913, -1.8199652, -3.8994808],
                                    [-2.7206483, 0., 3.1801476, 3.6073058]], dtype=np.float32)),
    Case(input=np.array([[-4.9304786, 0.10747302, -0.82588995, -2.7789218],
                         [-3.8013463, -1.6238483, 4.429097, -1.7679707]],
                        dtype=np.float32),
         next_layer_grad=np.array([[0.18790622, 2.0301895, -1.363704, 4.7178206],
                                   [4.624473, -2.482177, -0.02751494, -1.9912169]],
                                  dtype=np.float32),
         torch_layer_output=np.array([[0., 0.10747302, 0., 0.],
                                      [0., 0., 4.429097, 0.]], dtype=np.float32),
         torch_layer_grad=np.array([[0., 2.0301895, 0., 0.],
                                    [0., 0., -0.02751494, 0.]],
                                   dtype=np.float32)),
    Case(input=np.array([[-2.151595, -4.6311307, 1.0956433, 0.02679023],
                         [-4.4852123, -2.2135353, 4.082659, -2.604381]],
                        dtype=np.float32),
         next_layer_grad=np.array([[-3.5510514, -0.1054724, 4.8565044, -2.5794473],
                                   [1.7213554, 2.6161962, -2.6236246, 2.2821634]], dtype=np.float32),
         torch_layer_output=np.array([[0., 0., 1.0956433, 0.02679023],
                                      [0., 0., 4.082659, 0.]], dtype=np.float32),
         torch_layer_grad=np.array([[0., 0., 4.8565044, -2.5794473],
                                    [0., 0., -2.6236246, 0.]], dtype=np.float32)),
    Case(input=np.array([[-1.3221687, 1.3230582, 1.3352971, 0.35774684],
                         [-4.097102, 3.353025, -1.7921994, -3.134815]],
                        dtype=np.float32),
         next_layer_grad=np.array([[-4.5922484, 0.9089294, 1.7756436, -4.8341217],
                                   [0.12093058, -2.7350423, 1.4517279, -3.2563357]],
                                  dtype=np.float32),
         torch_layer_output=np.array([[0., 1.3230582, 1.3352971, 0.35774684],
                                      [0., 3.353025, 0., 0.]], dtype=np.float32),
         torch_layer_grad=np.array([[0., 0.9089294, 1.7756436, -4.8341217],
                                    [0., -2.7350423, 0., 0.]], dtype=np.float32)),
    Case(input=np.array([[1.9093773, -1.1326466, 4.3673, -3.6247907],
                         [-1.5893365, -3.865265, 4.2469363, 3.7733936]], dtype=np.float32),
         next_layer_grad=np.array([[-2.4205837, 1.5998404, 3.172222, 0.5520081],
                                   [0.29650578, -2.5814772, -4.068972, 3.9721575]],
                                  dtype=np.float32),
         torch_layer_output=np.array([[1.9093773, 0., 4.3673, 0.],
                                      [0., 0., 4.2469363, 3.7733936]], dtype=np.float32),
         torch_layer_grad=np.array([[-2.4205837, 0., 3.172222, 0.],
                                    [0., 0., -4.068972, 3.9721575]], dtype=np.float32)),
    Case(input=np.array([[4.0041804, 1.3310145, -1.6097021, -1.5079043],
                         [2.2595568, 3.9711027, 3.8708642, 2.7987554]], dtype=np.float32),
         next_layer_grad=np.array([[1.4203165, -4.1586003, -3.3837128, 3.9855418],
                                   [1.0642906, -4.9080296, -3.9852846, 1.6350176]], dtype=np.float32),
         torch_layer_output=np.array([[4.0041804, 1.3310145, 0., 0.],
                                      [2.2595568, 3.9711027, 3.8708642, 2.7987554]], dtype=np.float32),
         torch_layer_grad=np.array([[1.4203165, -4.1586003, 0., 0.],
                                    [1.0642906, -4.9080296, -3.9852846, 1.6350176]], dtype=np.float32)),
    Case(input=np.array([[-4.949384, -3.3919194, 0.4873379, 1.918952],
                         [1.5196126, -2.7573068, 2.1217923, -2.627509]], dtype=np.float32),
         next_layer_grad=np.array([[-1.746003, 2.464914, 1.496329, 3.492234],
                                   [1.576129, 0.68308604, -4.0632524, -1.322842]],
                                  dtype=np.float32),
         torch_layer_output=np.array([[0., 0., 0.4873379, 1.918952],
                                      [1.5196126, 0., 2.1217923, 0.]], dtype=np.float32),
         torch_layer_grad=np.array([[0., 0., 1.496329, 3.492234],
                                    [1.576129, 0., -4.0632524, 0.]], dtype=np.float32)),
    Case(input=np.array([[-2.3479762, -2.5601037, 4.7301054, -1.0690228],
                         [3.9204655, 1.3113862, 2.948113, 0.02637093]],
                        dtype=np.float32),
         next_layer_grad=np.array([[0.76903886, -0.07482306, -3.0475702, 2.2245212],
                                   [-2.1922765, -4.75684, 1.454723, -3.2288933]],
                                  dtype=np.float32),
         torch_layer_output=np.array([[0., 0., 4.7301054, 0.],
                                      [3.9204655, 1.3113862, 2.948113, 0.02637093]], dtype=np.float32),
         torch_layer_grad=np.array([[0., 0., -3.0475702, 0.],
                                    [-2.1922765, -4.75684, 1.454723, -3.2288933]], dtype=np.float32)),
    Case(input=np.array([[4.404586, 4.5392857, 4.148644, -1.298413],
                         [-4.8454337, 4.2831855, -0.71815854, 4.6665483]],
                        dtype=np.float32),
         next_layer_grad=np.array([[4.6362, 3.5300946, -2.055511, -1.1490227],
                                   [3.5113666, -1.8307799, -3.3050725, 0.5680126]], dtype=np.float32),
         torch_layer_output=np.array([[4.404586, 4.5392857, 4.148644, 0.],
                                      [0., 4.2831855, 0., 4.6665483]], dtype=np.float32),
         torch_layer_grad=np.array([[4.6362, 3.5300946, -2.055511, 0.],
                                    [0., -1.8307799, 0., 0.5680126]], dtype=np.float32)),
    Case(input=np.array([[4.361548, 1.960298, 0.7006117, -4.028235],
                         [1.1500722, 4.9005384, -3.59916, 0.18329652]],
                        dtype=np.float32),
         next_layer_grad=np.array([[3.7737308, 2.4076862, 1.9701574, 2.0248408],
                                   [-1.4050885, -2.0640817, 3.0936115, 3.101134]], dtype=np.float32),
         torch_layer_output=np.array([[4.361548, 1.960298, 0.7006117, 0.],
                                      [1.1500722, 4.9005384, 0., 0.18329652]], dtype=np.float32),
         torch_layer_grad=np.array([[3.7737308, 2.4076862, 1.9701574, 0.],
                                    [-1.4050885, -2.0640817, 0., 3.101134]], dtype=np.float32)),
    Case(input=np.array([[3.6707232, 4.1324058, 0.11342399, 0.01516295],
                         [2.9829519, 1.4996393, 2.0196688, 2.9579268]], dtype=np.float32),
         next_layer_grad=np.array([[3.9000535, -1.6200484, -1.2441704, -4.0601807],
                                   [0.7828014, -4.6405773, -0.34401983, 0.42644635]],
                                  dtype=np.float32),
         torch_layer_output=np.array([[3.6707232, 4.1324058, 0.11342399, 0.01516295],
                                      [2.9829519, 1.4996393, 2.0196688, 2.9579268]], dtype=np.float32),
         torch_layer_grad=np.array([[3.9000535, -1.6200484, -1.2441704, -4.0601807],
                                    [0.7828014, -4.6405773, -0.34401983, 0.42644635]],
                                   dtype=np.float32)),
    Case(input=np.array([[-2.1345875, 0.9083326, -4.6949973, -4.6265182],
                         [3.2260056, -1.3980936, -3.729395, 0.2224326]], dtype=np.float32),
         next_layer_grad=np.array([[2.6999354, -2.8417897, 1.2289047, -4.1465254],
                                   [-4.483183, 0.31354633, 0.4063512, 1.374299]],
                                  dtype=np.float32),
         torch_layer_output=np.array([[0., 0.9083326, 0., 0.],
                                      [3.2260056, 0., 0., 0.2224326]], dtype=np.float32),
         torch_layer_grad=np.array([[0., -2.8417897, 0., 0.],
                                    [-4.483183, 0., 0., 1.374299]], dtype=np.float32)),
    Case(input=np.array([[2.2609134, 4.7585206, 0.16300349, -1.7704352],
                         [2.9518619, -2.2916775, -0.6102858, -4.215436]],
                        dtype=np.float32),
         next_layer_grad=np.array([[-4.7464924, 4.626484, 3.3598013, 1.9597421],
                                   [-0.91047055, -3.2670567, -3.4356296, -2.497571]],
                                  dtype=np.float32),
         torch_layer_output=np.array([[2.2609134, 4.7585206, 0.16300349, 0.],
                                      [2.9518619, 0., 0., 0.]], dtype=np.float32),
         torch_layer_grad=np.array([[-4.7464924, 4.626484, 3.3598013, 0.],
                                    [-0.91047055, 0., 0., 0.]],
                                   dtype=np.float32)),
    Case(input=np.array([[0.49226665, 2.1459591, 1.6019738, -2.200661],
                         [4.5486526, 2.3789692, 0.54354054, 1.1172074]],
                        dtype=np.float32),
         next_layer_grad=np.array([[-0.80399936, -2.52269, -1.4402732, 2.5784612],
                                   [-4.8560653, -3.8392737, -4.5399737, -4.592712]],
                                  dtype=np.float32),
         torch_layer_output=np.array([[0.49226665, 2.1459591, 1.6019738, 0.],
                                      [4.5486526, 2.3789692, 0.54354054, 1.1172074]], dtype=np.float32),
         torch_layer_grad=np.array([[-0.80399936, -2.52269, -1.4402732, 0.],
                                    [-4.8560653, -3.8392737, -4.5399737, -4.592712]],
                                   dtype=np.float32)),
    Case(input=np.array([[3.5546057, 2.0365787, -0.2582617, -4.0216584],
                         [-0.08384125, -0.2652823, -3.2679813, -0.6614835]],
                        dtype=np.float32),
         next_layer_grad=np.array([[-1.0149527, 1.158501, 1.3509365, -4.54696],
                                   [-1.2538738, 1.2585992, 0.03136259, 3.5648985]],
                                  dtype=np.float32),
         torch_layer_output=np.array([[3.5546057, 2.0365787, 0., 0.],
                                      [0., 0., 0., 0.]], dtype=np.float32),
         torch_layer_grad=np.array([[-1.0149527, 1.158501, 0., 0.],
                                    [0., 0., 0., 0.]], dtype=np.float32)),
    Case(input=np.array([[1.5869364, -3.3706558, -4.2943125, 1.4241928],
                         [-4.734887, 0.85775584, 4.4023023, 0.7547418]],
                        dtype=np.float32),
         next_layer_grad=np.array([[-1.1183008, 1.4328822, -0.41747108, 0.4561679],
                                   [4.414648, -1.1389736, 4.6119056, 4.0535064]],
                                  dtype=np.float32),
         torch_layer_output=np.array([[1.5869364, 0., 0., 1.4241928],
                                      [0., 0.85775584, 4.4023023, 0.7547418]], dtype=np.float32),
         torch_layer_grad=np.array([[-1.1183008, 0., 0., 0.4561679],
                                    [0., -1.1389736, 4.6119056, 4.0535064]], dtype=np.float32)),
    Case(input=np.array([[-3.0420887, -4.306387, -3.99222, -4.817782],
                         [-4.0555706, 1.8300678, -4.2881136, -1.8102437]], dtype=np.float32),
         next_layer_grad=np.array([[3.448753, -4.7672806, 3.1446848, -2.1814523],
                                   [-3.8183517, 1.9673717, 1.2894285, 3.7747202]], dtype=np.float32),
         torch_layer_output=np.array([[0., 0., 0., 0.],
                                      [0., 1.8300678, 0., 0.]], dtype=np.float32),
         torch_layer_grad=np.array([[0., 0., 0., 0.],
                                    [0., 1.9673717, 0., 0.]], dtype=np.float32)),
    Case(input=np.array([[2.3507104, 3.0348094, -2.1796544, -3.2256045],
                         [2.5061476, 3.0683475, 4.905051, -0.8738232]], dtype=np.float32),
         next_layer_grad=np.array([[-1.2798191, 2.7641296, -1.5919646, 4.3075733],
                                   [3.5841274, -0.7100597, 2.5087106, 2.5454288]], dtype=np.float32),
         torch_layer_output=np.array([[2.3507104, 3.0348094, 0., 0.],
                                      [2.5061476, 3.0683475, 4.905051, 0.]], dtype=np.float32),
         torch_layer_grad=np.array([[-1.2798191, 2.7641296, 0., 0.],
                                    [3.5841274, -0.7100597, 2.5087106, 0.]], dtype=np.float32)),
]
