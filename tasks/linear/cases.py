import dataclasses
import numpy as np


@dataclasses.dataclass
class Case:
    weight: np.ndarray
    bias: np.ndarray
    input: np.ndarray
    next_layer_grad: np.ndarray
    torch_layer_output: np.ndarray
    torch_layer_grad: np.ndarray
    torch_weight_grad: np.ndarray
    torch_bias_grad: np.ndarray

    def __str__(self) -> str:
        return 'linear weights: {} biases {}'.format(self.weight, self.bias)


cases = [
    Case(
        weight=np.array([[0.4414065, 0.47920525, -0.13525727],
                         [0.53036046, -0.1264995, 0.11650389],
                         [-0.28108588, 0.33906782, 0.50895905],
                         [-0.4235604, 0.5018307, 0.10805649]], dtype=np.float32),
        bias=np.array([0.42655146, 0.07819086, 0.27839142, -0.08151665], dtype=np.float32),
        input=np.array([[-3.9151552, 0.49512863, -1.3610996],
                        [-4.1754174, 2.237058, -7.2101226]], dtype=np.float32),
        next_layer_grad=np.array([[-4.157107, -2.672763, -0.8786003, 5.7035193],
                                  [-6.0065246, 0.28468877, 1.8482914, -9.0709915]],
                                 dtype=np.float32),
        torch_layer_output=np.array([[-0.88025665, -2.2194595, 0.8540245, 1.6781832],
                                     [0.6307266, -3.2592795, -1.4591007, 2.0305486]],
                                    dtype=np.float32),
        torch_layer_grad=np.array([[-5.4213247, 0.9102919, 0.4200223],
                                   [0.82225275, -6.839777, 0.80611867]], dtype=np.float32),
        torch_weight_grad=np.array([[41.35547, -15.495246, 48.966015],
                                    [9.275587, -0.68649626, 1.5852559],
                                    [-4.2775316, 3.699715, -12.130545],
                                    [15.5450115, -17.468357, 57.639904]], dtype=np.float32),
        torch_bias_grad=np.array([-10.163631, -2.3880744, 0.9696911, -3.3674722], dtype=np.float32)),
    Case(
        weight=np.array([[0.4450711, 0.08533752, -0.26953015],
                         [0.1471656, -0.2660064, -0.06770754],
                         [-0.23449561, 0.3829974, -0.45574307],
                         [-0.26616445, -0.16302913, -0.3471448]], dtype=np.float32),
        bias=np.array([0.05449212, -0.5702368, 0.5214102, -0.4904407], dtype=np.float32),
        input=np.array([[-3.7657785, 0.40136042, 0.9342056],
                        [-6.302911, 9.391692, 5.5026565]], dtype=np.float32),
        next_layer_grad=np.array([[8.789979, 7.896547, 1.9579996, 8.437485],
                                  [-8.23015, -6.080343, -9.095454, -3.4933934]], dtype=np.float32),
        torch_layer_output=np.array([[-1.8390926, -1.294447, 1.132431, 0.12213758],
                                     [-3.4324198, -4.36863, 3.0886116, -2.254168]],
                                    dtype=np.float32),
        torch_layer_grad=np.array([[2.369365, -1.9760643, -6.725194],
                                   [-1.4951582, -1.998941, 7.9878626]], dtype=np.float32),
        torch_weight_grad=np.array([[18.772789, -73.76709, -37.076042],
                                    [8.58721, -53.935345, -26.08104],
                                    [49.95444, -84.63584, -48.219986],
                                    [-9.755152, -29.422403, -11.340599]], dtype=np.float32),
        torch_bias_grad=np.array([0.55982876, 1.8162041, -7.1374545, 4.9440913], dtype=np.float32)),
    Case(
        weight=np.array([[0.4457302, 0.09608215, -0.18746823],
                         [0.35677356, 0.08998048, 0.46647787],
                         [0.06311578, -0.18208078, 0.1551246],
                         [-0.15656552, 0.24298221, 0.5154711]], dtype=np.float32),
        bias=np.array([0.33374286, -0.25240168, 0.3332839, 0.10330313], dtype=np.float32),
        input=np.array([[5.425407, -8.519107, -2.8306854],
                        [-7.6826186, 7.2620687, 2.4659626]], dtype=np.float32),
        next_layer_grad=np.array([[-3.3820395, -8.728833, -3.7803535, -3.4963336],
                                  [4.5921235, 2.7511494, 7.744255, -0.5557015]], dtype=np.float32),
        torch_layer_output=np.array([[2.46414, -0.4037654, 1.7877693, -4.2752566],
                                     [-2.855167, -1.1895953, -1.0913621, 4.341822]], dtype=np.float32),
        torch_layer_grad=np.array([[-4.3128886, -1.2715955, -5.826467],
                                   [3.6041737, -0.8563347, 1.3373494]], dtype=np.float32),
        torch_weight_grad=np.array([[-53.62847, 62.16027, 20.897495],
                                    [-68.4935, 94.3409, 31.492811],
                                    [-80.00612, 88.44455, 29.798035],
                                    [-14.699789, 25.750095, 8.526681]], dtype=np.float32),
        torch_bias_grad=np.array([1.210084, -5.977684, 3.9639015, -4.0520353], dtype=np.float32)),
    Case(
        weight=np.array([[0.2931987, -0.3518979, -0.5715239],
                         [-0.22306535, -0.44284084, 0.4737383],
                         [0.16629499, 0.23914629, 0.18259346],
                         [-0.01004356, 0.4518391, -0.4102152]], dtype=np.float32),
        bias=np.array([0.0363521, -0.39406475, 0.1780271, -0.1988292], dtype=np.float32),
        input=np.array([[-1.7923416, 5.111023, -5.4240365],
                        [-8.460402, -4.204971, -6.775574]], dtype=np.float32),
        next_layer_grad=np.array([[8.593953, 6.1624074, 2.668075, 7.4292116],
                                  [6.0734415, -6.268599, 7.85118, 0.78684485]],
                                 dtype=np.float32),
        torch_layer_output=np.array([[0.8122482, -4.827199, 0.11185819, 4.3535547],
                                     [2.9078965, 0.14544144, -3.471674, 0.76561666]],
                                    dtype=np.float32),
        torch_layer_grad=np.array([[1.514188, -1.7582912, -4.552684],
                                   [4.476742, 2.8718681, -5.329994]], dtype=np.float32),
        torch_weight_grad=np.array([[-66.787056, 18.385248, -87.76497],
                                    [41.989727, 57.855484, 9.048237],
                                    [-71.20624, -19.377392, -67.66799],
                                    [-19.97271, 34.662212, -45.62764]], dtype=np.float32),
        torch_bias_grad=np.array([14.667395, -0.10619164, 10.519255, 8.216057], dtype=np.float32)),
    Case(
        weight=np.array([[0.1769095, -0.12028602, 0.47884965],
                         [-0.34219658, -0.34433055, -0.34435132],
                         [0.51929355, 0.1924026, 0.5555557],
                         [-0.47647345, -0.5726599, -0.45169795]], dtype=np.float32),
        bias=np.array([-0.38837722, 0.23385006, 0.2067352, 0.47973442], dtype=np.float32),
        input=np.array([[0.37581244, 4.060379, -2.727408],
                        [9.435641, 9.248946, -4.964354]], dtype=np.float32),
        next_layer_grad=np.array([[-0.05502988, -3.9824338, -4.30319, -9.262261],
                                  [2.1912866, 0.05358046, -8.970425, -4.4270706]],
                                 dtype=np.float32),
        torch_layer_output=np.array([[-2.1163175, -0.35367775, -0.33210742, -0.79258204],
                                     [-2.2088206, -4.470207, 4.128149, -7.0702105]],
                                    dtype=np.float32),
        torch_layer_grad=np.array([[3.531643, 5.8540735, 3.138088],
                                   [-2.1795776, 0.5272423, -1.9530255]], dtype=np.float32),
        torch_weight_grad=np.array([[20.655512, 20.04365, -10.728233],
                                    [-0.9910822, -15.674628, 10.59573],
                                    [-86.2589, -100.43956, 56.26892],
                                    [-45.253124, -78.55403, 47.23951]], dtype=np.float32),
        torch_bias_grad=np.array([2.1362567, -3.9288533, -13.273615, -13.689332], dtype=np.float32)),
    Case(
        weight=np.array([[-0.29815832, -0.3935865, 0.30632943],
                         [-0.23336756, 0.3504076, -0.1370056],
                         [0.3302709, -0.44858268, -0.29135966],
                         [0.1760205, 0.12205619, -0.1472005]], dtype=np.float32),
        bias=np.array([0.34414083, 0.392488, -0.41867903, -0.30822894], dtype=np.float32),
        input=np.array([[-3.5843987, -6.26963, -9.184497],
                        [1.8178588, 3.5512872, -9.668243]], dtype=np.float32),
        next_layer_grad=np.array([[0.24186116, -5.4700847, 2.9034557, -6.5126715],
                                  [3.8187547, -2.2652931, 8.7346, -7.2495813]],
                                 dtype=np.float32),
        torch_layer_output=np.array([[1.067019, 0.290372, 3.885938, -0.35244128],
                                     [-4.557275, 2.53726, 1.4055972, 1.8683782]],
                                    dtype=np.float32),
        torch_layer_grad=np.array([[1.0169905e+00, -4.1093044e+00, 9.3623996e-01],
                                   [9.9876171e-01, -7.0998330e+00, 2.3865700e-03]], dtype=np.float32),
        torch_weight_grad=np.array([[6.0750303, 12.0451145, -39.142025],
                                    [15.488981, 26.2507, 72.14138],
                                    [5.4711275, 12.815481, -111.11502],
                                    [10.165296, 15.086693, 129.90633]], dtype=np.float32),
        torch_bias_grad=np.array([4.060616, -7.735378, 11.638056, -13.762253], dtype=np.float32)),
    Case(
        weight=np.array([[0.5286577, -0.19481674, -0.20468011],
                         [-0.558641, -0.33063132, 0.14422423],
                         [-0.07620627, -0.41909045, 0.01354271],
                         [-0.3943773, -0.48982203, -0.3179252]], dtype=np.float32),
        bias=np.array([-0.5053039, -0.3676209, 0.5771245, 0.109047], dtype=np.float32),
        input=np.array([[4.5191135, 7.9422054, 7.7417283],
                        [5.597511, 2.840633, -8.317201]], dtype=np.float32),
        next_layer_grad=np.array([[-6.7674255, 7.9710836, 2.1285813, -9.816059],
                                  [-7.970569, 3.2700353, -9.898768, -6.7838387]], dtype=np.float32),
        torch_layer_output=np.array([[-1.2480922, -4.4015803, -2.9909186, -8.024747],
                                     [3.6028256, -5.633364, -1.1525605, -0.8456411]], dtype=np.float32),
        torch_layer_grad=np.array([[-4.321606, 2.5989718, 5.6843805],
                                   [-2.6107383, 7.942977, 4.1257324]], dtype=np.float32),
        torch_weight_grad=np.array([[-75.19811, -76.38974, 13.901253],
                                    [54.32629, 72.596954, 34.512424],
                                    [-45.78916, -11.213137, 98.80894],
                                    [-82.3325, -97.23155, -19.570717]], dtype=np.float32),
        torch_bias_grad=np.array([-14.737995, 11.241119, -7.7701874, -16.599897], dtype=np.float32)),
    Case(
        weight=np.array([[0.17791611, -0.5384855, -0.37918854],
                         [-0.1921744, 0.09028089, -0.5080228],
                         [-0.24876466, -0.34564146, 0.00159997],
                         [-0.21483389, -0.04000795, -0.3912297]], dtype=np.float32),
        bias=np.array([-0.39629042, -0.33682716, -0.19762552, -0.45569152], dtype=np.float32),
        input=np.array([[9.460211, -2.1380455, 7.840931],
                        [2.6227725, 5.896226, 0.05274186]], dtype=np.float32),
        next_layer_grad=np.array([[1.5380777, -0.14964612, -6.0951405, 4.4490423],
                                  [-4.384553, -9.51368, 2.909446, -6.4577866]],
                                 dtype=np.float32),
        torch_layer_output=np.array([[-0.53505075, -6.331234, -1.7994492, -5.4701314],
                                     [-3.1246881, -0.33533448, -2.8879743, -1.275682]],
                                    dtype=np.float32),
        torch_layer_grad=np.array([[0.86285746, 1.0869936, -2.2575474],
                                   [1.7117872, 0.75485253, 9.026872]], dtype=np.float32),
        torch_weight_grad=np.array([[3.0508547, -29.140795, 11.8287115],
                                    [-26.367903, -55.77486, -1.6751342],
                                    [-50.0305, 30.18644, -47.638126],
                                    [25.151573, -47.58882, 34.544037]], dtype=np.float32),
        torch_bias_grad=np.array([-2.8464751, -9.663326, -3.1856945, -2.0087442], dtype=np.float32)),
    Case(
        weight=np.array([[0.4840908, -0.11458325, 0.49675024],
                         [0.179892, -0.48889846, 0.39954668],
                         [-0.15885493, -0.22131339, -0.47924143],
                         [-0.5739789, 0.16518605, -0.12611863]], dtype=np.float32),
        bias=np.array([0.22477579, -0.47381026, 0.42864168, -0.42380613], dtype=np.float32),
        input=np.array([[8.723096, 3.920596, 1.4012234],
                        [-8.05647, 2.3001444, 9.801077]], dtype=np.float32),
        next_layer_grad=np.array([[-7.19832, 0.36659303, 7.5474615, 4.8153725],
                                  [3.9403148, 4.0496817, -2.810177, -4.1281633]],
                                 dtype=np.float32),
        torch_layer_output=np.array([[4.69437, -0.26151425, -2.4962697, -4.959772],
                                     [0.929842, 0.8683459, -3.497683, 3.3442912]],
                                    dtype=np.float32),
        torch_layer_grad=np.array([[-7.381567, -0.22934175, -7.653661],
                                   [5.4518647, -2.4913623, 5.4427805]], dtype=np.float32),
        torch_weight_grad=np.array([[-94.53666, -19.15841, 28.532873],
                                    [-29.42831, 10.752116, 40.20492],
                                    [88.47733, 23.126732, -16.967081],
                                    [75.26338, 9.383758, -33.71303]], dtype=np.float32),
        torch_bias_grad=np.array([-3.2580051, 4.4162745, 4.7372847, 0.6872091], dtype=np.float32)),
    Case(
        weight=np.array([[-0.099693, 0.12059098, 0.2980581],
                         [0.4661008, 0.52594256, -0.4577938],
                         [0.14530015, -0.24833333, -0.06326884],
                         [-0.43214095, 0.5258845, -0.42374653]], dtype=np.float32),
        bias=np.array([0.30856556, 0.20290375, 0.18761337, -0.31214222], dtype=np.float32),
        input=np.array([[-0.68803966, 0.8528927, -4.269175],
                        [1.8166652, -9.389995, -9.2530365]], dtype=np.float32),
        next_layer_grad=np.array([[6.452011, -2.7961872, -7.45879, 0.4448652],
                                  [5.399871, -5.6835794, 2.4578094, -8.293051]], dtype=np.float32),
        torch_layer_output=np.array([[-0.79245263, 2.2851822, 0.14594516, 2.242759],
                                     [-3.762834, 0.34703827, 3.3688526, -2.1143084]],
                                    dtype=np.float32),
        torch_layer_grad=np.array([[-3.2225332, 1.3936344, 3.48655],
                                   [0.75343645, -7.3096037, 7.5700316]], dtype=np.float32),
        torch_weight_grad=np.array([[5.3705177, -45.201885, -77.509964],
                                    [-8.401274, 50.983932, 64.52778],
                                    [9.59696, -29.440365, 9.100679],
                                    [-15.371781, 78.25113, 74.83669]], dtype=np.float32),
        torch_bias_grad=np.array([11.851882, -8.479767, -5.0009804, -7.8481855], dtype=np.float32)),
    Case(
        weight=np.array([[0.5247834, 0.12687296, 0.07427037],
                         [-0.5087927, 0.242365, -0.08661443],
                         [-0.26449817, 0.49591303, 0.12871957],
                         [-0.3194343, -0.29221943, -0.0275718]], dtype=np.float32),
        bias=np.array([0.32237005, -0.14753252, -0.32942155, -0.19770947], dtype=np.float32),
        input=np.array([[-1.8209411, -6.5341134, -6.871259],
                        [-4.995142, 0.9845333, 4.2919183]], dtype=np.float32),
        next_layer_grad=np.array([[3.2039475, -4.401322, 9.097305, 4.7579384],
                                  [1.0870811, 2.2344148, -1.6079987, -5.04538]], dtype=np.float32),
        torch_layer_output=np.array([[-1.9725628, -0.20954126, -3.9726033, 2.4828093],
                                     [-1.8553245, 2.2608337, 2.0324812, 0.99187434]],
                                    dtype=np.float32),
        torch_layer_grad=np.array([[-0.00533068, 2.460878, 1.6589925],
                                   [1.4706082, 1.3563957, -0.18066537]], dtype=np.float32),
        torch_weight_grad=np.array([[-11.264324, -19.86469, -17.349491],
                                    [-3.1466713, 30.958591, 39.83255],
                                    [-8.533475, -61.025955, -69.41134],
                                    [16.538465, -36.056255, -54.34739]], dtype=np.float32),
        torch_bias_grad=np.array([4.2910285, -2.166907, 7.4893064, -0.28744173], dtype=np.float32)),
    Case(
        weight=np.array([[-0.43132386, 0.20590186, 0.44689238],
                         [-0.54354084, 0.13409, 0.29825443],
                         [0.10469055, -0.20560867, 0.30134344],
                         [0.30340517, 0.21588701, -0.1014528]], dtype=np.float32),
        bias=np.array([-0.15288308, 0.06176543, -0.1019913, -0.17205098], dtype=np.float32),
        input=np.array([[2.701873, -9.09392, -2.5077477],
                        [2.5171983, 0.06272517, 7.129797]], dtype=np.float32),
        next_layer_grad=np.array([[3.1738727, -6.7413116, -8.588625, 2.8483856],
                                  [-9.469774, 1.7155117, 8.804605, 1.5094836]], dtype=np.float32),
        torch_layer_output=np.array([[-4.311414, -3.3741634, 1.2949648, -1.0611298],
                                     [1.9605565, 0.82846963, 2.2971563, -0.11811623]],
                                    dtype=np.float32),
        torch_layer_grad=np.array([[2.2602777, 2.130389, -3.469349],
                                   [4.5318327, -3.2042363, -1.2202423]], dtype=np.float32),
        torch_weight_grad=np.array([[-15.261898, -29.456936, -75.476845],
                                    [-13.895885, 61.41255, 29.136757],
                                    [-1.0424385, 78.65653, 84.31315],
                                    [11.4956455, -25.808308, 3.619279]], dtype=np.float32),
        torch_bias_grad=np.array([-6.2959013, -5.0257998, 0.21597958, 4.357869], dtype=np.float32)),
    Case(
        weight=np.array([[0.36904627, 0.49617457, -0.05715615],
                         [-0.12926692, 0.00842488, -0.03447258],
                         [0.13880152, 0.16179293, -0.5243823],
                         [-0.21306404, 0.48620367, 0.22490966]], dtype=np.float32),
        bias=np.array([-0.02871603, -0.3480878, -0.35322583, -0.5171712], dtype=np.float32),
        input=np.array([[6.897506, -9.534561, 6.2893696],
                        [-4.3629045, -7.6367035, 3.9347434]], dtype=np.float32),
        next_layer_grad=np.array([[2.578857, 7.5494404, 4.701421, 6.0696187],
                                  [-4.3593087, -6.451209, 5.0122952, 6.136695]], dtype=np.float32),
        torch_layer_output=np.array([[-2.5735002, -1.5368454, -4.2365003, -5.2079806],
                                     [-5.6528625, 0.01591235, -4.257678, -2.4156246]],
                                    dtype=np.float32),
        torch_layer_grad=np.array([[-0.66482854, 5.0548935, -1.5078721],
                                   [-1.3866535, 1.5773088, -0.77660584]], dtype=np.float32),
        torch_weight_grad=np.array([[36.80693, 8.702478, -0.9333763],
                                    [80.21832, -22.714626, 22.097368],
                                    [10.559912, -83.10339, 49.29107],
                                    [15.091421, -104.735275, 62.320396]], dtype=np.float32),
        torch_bias_grad=np.array([-1.7804518, 1.0982313, 9.7137165, 12.206314], dtype=np.float32)),
    Case(
        weight=np.array([[-0.18819448, 0.19497359, 0.36813104],
                         [0.2665611, -0.51034534, -0.34719676],
                         [-0.09111547, 0.55849946, 0.08351803],
                         [-0.14951682, 0.23885858, -0.21990207]], dtype=np.float32),
        bias=np.array([-0.37369323, 0.4214006, -0.2625222, -0.11573952], dtype=np.float32),
        input=np.array([[-2.2159665, -9.783247, 8.107639],
                        [-8.174267, -3.6137273, 9.00124]], dtype=np.float32),
        next_layer_grad=np.array([[9.012143, 1.4687577, 2.6367443, -1.0310895],
                                  [-4.1357846, -3.4267092, 3.4503691, 5.0474906]], dtype=np.float32),
        torch_layer_output=np.array([[1.1205385, 2.0085983, -4.8474174, -3.9041145],
                                     [3.7737134, -3.0384932, -0.7842189, -1.7361102]], dtype=np.float32),
        torch_layer_grad=np.array([[-1.390605, 2.233892, 3.2546558],
                                   [-1.2041621, 4.075102, -1.1545539]], dtype=np.float32),
        torch_weight_grad=np.array([[13.836399, -73.22243, 35.84002],
                                    [24.756119, -1.9860268, -18.936474],
                                    [-34.047173, -38.26461, 52.43537],
                                    [-38.974678, -8.152852, 37.07397]], dtype=np.float32),
        torch_bias_grad=np.array([4.8763585, -1.9579514, 6.0871134, 4.0164013], dtype=np.float32)),
    Case(
        weight=np.array([[-0.5743505, 0.38640356, 0.4374206],
                         [0.21041423, -0.40257144, -0.56981003],
                         [-0.46891174, 0.4305302, 0.2771892],
                         [0.48584282, 0.30245638, 0.14612281]], dtype=np.float32),
        bias=np.array([-0.0056538, -0.43907836, -0.49465764, -0.5400238], dtype=np.float32),
        input=np.array([[-8.54474, 6.437201, 4.1248446],
                        [-8.373024, -8.303246, 9.732792]], dtype=np.float32),
        next_layer_grad=np.array([[-2.514584, -2.587157, 6.2559915, 8.944971],
                                  [9.720021, 5.0675635, -2.4748082, -8.329986]], dtype=np.float32),
        torch_layer_output=np.array([[9.193671, -7.1788244, 7.4268427, -2.1417181],
                                     [5.8523164, -4.404075, 2.5545783, -5.6971836]], dtype=np.float32),
        torch_layer_grad=np.array([[2.31222, 5.468728, 3.4154148],
                                   [-7.4030085, -1.8691425, -0.5390017]], dtype=np.float32),
        torch_weight_grad=np.array([[-59.899506, -96.89461, 84.230675],
                                    [-20.32425, -58.731274, 38.64992],
                                    [-32.73419, 60.820015, 1.7181988],
                                    [-6.68528, 126.74649, -44.1774]], dtype=np.float32),
        torch_bias_grad=np.array([7.205437, 2.4804065, 3.7811832, 0.61498547], dtype=np.float32)),
    Case(
        weight=np.array([[0.23634523, -0.2834605, -0.11619323],
                         [-0.33226812, -0.10520682, -0.40635926],
                         [-0.37724972, 0.1915133, -0.17158642],
                         [0.35642326, -0.18521902, -0.4235252]], dtype=np.float32),
        bias=np.array([-0.10186705, -0.27986905, -0.17663544, -0.54963493], dtype=np.float32),
        input=np.array([[-4.2857585, 7.3719826, -5.5280833],
                        [9.264451, -9.75691, 9.397576]], dtype=np.float32),
        next_layer_grad=np.array([[-9.136802, 7.822862, 0.5540222, 9.859296],
                                  [-8.524069, 1.0770857, 9.386051, 0.4619569]], dtype=np.float32),
        torch_layer_output=np.array([[-2.5621254, 2.6149566, 3.8005424, -1.1013277],
                                     [3.7615058, -6.1504498, -7.1527214, 0.5794854]], dtype=np.float32),
        torch_layer_grad=np.array([[-1.4536495, 0.04687762, -6.3879814],
                                   [-5.7487373, 4.0149107, -1.2534139]], dtype=np.float32),
        torch_weight_grad=np.array([[-39.81269, 15.812225, -29.596588],
                                    [-23.54829, 47.160973, -33.12344],
                                    [84.58221, -87.49461, 85.14345],
                                    [-37.974785, 68.175285, -50.161736]], dtype=np.float32),
        torch_bias_grad=np.array([-17.66087, 8.899948, 9.940073, 10.321253], dtype=np.float32)),
    Case(
        weight=np.array([[0.32302225, -0.40195388, 0.29018646],
                         [0.26199245, 0.4124779, -0.44285768],
                         [0.4152285, -0.27294326, 0.21423692],
                         [0.54219806, -0.08142477, -0.00446492]], dtype=np.float32),
        bias=np.array([-0.13292369, -0.48207855, 0.27707207, -0.5731459], dtype=np.float32),
        input=np.array([[1.6731223, -8.445308, 9.487896],
                        [9.724215, 3.9632342, 0.72192734]], dtype=np.float32),
        next_layer_grad=np.array([[-3.8094478, 6.2759004, 3.6946235, -6.747661],
                                  [8.218544, 6.4507446, 8.995998, 4.51439]], dtype=np.float32),
        torch_layer_output=np.array([[6.5554156, -7.7290235, 5.3095474, 0.97931236],
                                     [1.62467, 3.3806279, 3.3877683, 4.373376]],
                                    dtype=np.float32),
        torch_layer_grad=np.array([[-1.7107538, 3.6608968, -3.0631285],
                                   [10.527907, -3.4656665, 1.435267]], dtype=np.float32),
        torch_weight_grad=np.array([[73.54521, 64.74397, -30.210451],
                                    [73.228775, -27.4361, 64.20206],
                                    [93.660576, 4.4510155, 41.54866],
                                    [32.609234, 74.87766, -60.762043]], dtype=np.float32),
        torch_bias_grad=np.array([4.4090962, 12.7266445, 12.690622, -2.2332711], dtype=np.float32)),
    Case(
        weight=np.array([[0.358419, 0.431988, 0.5460038],
                         [-0.13618511, -0.4743752, 0.1298058],
                         [0.31894404, -0.57464176, -0.13104907],
                         [-0.34609577, -0.05049723, -0.2841796]], dtype=np.float32),
        bias=np.array([-0.23600206, -0.18328497, -0.54865825, 0.4737202], dtype=np.float32),
        input=np.array([[-1.70361, -4.5318584, -8.87249],
                        [7.2944474, 6.2580204, 9.994353]], dtype=np.float32),
        next_layer_grad=np.array([[9.932736, 1.1086341, 5.3797483, 8.895314],
                                  [6.9929476, -5.053038, -0.98911726, -7.4168115]],
                                 dtype=np.float32),
        torch_layer_output=np.array([[-7.64873, 1.0468218, 2.674912, 3.8135595],
                                     [10.538811, -2.8480046, -3.1280084, -5.2070613]], dtype=np.float32),
        torch_layer_grad=np.array([[2.0463097, 0.22429764, 2.3343415],
                                   [5.4460077, 6.3608217, 5.399592]], dtype=np.float32),
        torch_weight_grad=np.array([[34.08818, -1.2517471, -18.238113],
                                    [-38.7478, -36.646187, -60.338192],
                                    [-16.380056, -30.570175, -57.617348],
                                    [-69.255684, -86.72687, -153.04982]], dtype=np.float32),
        torch_bias_grad=np.array([16.925684, -3.9444041, 4.390631, 1.4785028], dtype=np.float32)),
    Case(
        weight=np.array([[0.4840107, -0.09056839, -0.06574982],
                         [-0.23562813, -0.5213835, -0.5618452],
                         [0.21457708, -0.31699196, -0.3711652],
                         [-0.04504669, -0.19226408, -0.1867848]], dtype=np.float32),
        bias=np.array([0.01855093, -0.12246317, -0.19878888, -0.2764387], dtype=np.float32),
        input=np.array([[-7.3196955, -9.424347, 5.102745],
                        [2.406191, 4.0815954, -5.740717]], dtype=np.float32),
        next_layer_grad=np.array([[-7.2725706, -9.709106, -2.9882488, 1.7983538],
                                  [-2.1551192, -1.2505015, 8.083174, -3.0348907]], dtype=np.float32),
        torch_layer_output=np.array([[-3.0062165, 3.6490095, -0.67594683, 0.9121375],
                                     [1.1909606, 0.40788823, 1.1544459, -0.09729511]],
                                    dtype=np.float32),
        torch_layer_grad=np.array([[-1.9544828, 6.322325, 6.7064137],
                                   [1.1227282, -1.1316242, -1.5890343]], dtype=np.float32),
        torch_weight_grad=np.array([[48.047375, 59.742905, -24.738144],
                                    [68.058754, 86.39795, -42.36432],
                                    [41.32273, 61.15454, -61.651485],
                                    [-20.465929, -29.335506, 26.598988]], dtype=np.float32),
        torch_bias_grad=np.array([-9.42769, -10.959608, 5.094925, -1.2365369], dtype=np.float32)),
    Case(
        weight=np.array([[-0.46986347, 0.48411238, -0.23104814],
                         [0.15298599, -0.20032087, 0.04691625],
                         [0.5382639, 0.26599836, -0.5003315],
                         [0.2291519, 0.54804564, 0.15189123]], dtype=np.float32),
        bias=np.array([0.38706988, 0.5692024, -0.08846679, 0.11983162], dtype=np.float32),
        input=np.array([[-8.482734, -7.4224057, -7.439083],
                        [-6.961946, -7.2234564, 2.8174949]], dtype=np.float32),
        next_layer_grad=np.array([[-6.362398, -3.0866544, 7.935768, -0.5207672],
                                  [3.3511548, -6.5536027, -6.1542196, -9.182628]], dtype=np.float32),
        torch_layer_output=np.array([[2.4983046, 0.40931195, -2.9067566, -7.021752],
                                     [-0.4897076, 1.0833176, -7.1669397, -5.0063424]],
                                    dtype=np.float32),
        torch_layer_grad=np.array([[6.6694465, -0.63629735, -2.7244089],
                                   [-7.994005, -3.7343524, 0.602641]], dtype=np.float32),
        torch_weight_grad=np.array([[30.639969, 23.01738, 56.77227],
                                    [71.8091, 70.25007, 4.497135],
                                    [-24.471664, -14.447754, -76.37432],
                                    [68.34649, 70.195656, -21.997974]], dtype=np.float32),
        torch_bias_grad=np.array([-3.0112433, -9.640257, 1.7815485, -9.703395], dtype=np.float32)),
    Case(
        weight=np.array([[-0.40127867, -0.11897868, 0.42757618],
                         [0.29597622, -0.3653409, -0.46296853],
                         [-0.3945402, -0.5697741, -0.44550598],
                         [-0.14277723, 0.3896405, 0.0966382]], dtype=np.float32),
        bias=np.array([-0.43913576, -0.46316418, 0.2872175, -0.42945695], dtype=np.float32),
        input=np.array([[-8.77844, -4.462447, 6.124026],
                        [4.9651937, -6.30958, -5.8130136]], dtype=np.float32),
        next_layer_grad=np.array([[-2.590558, -0.3095403, 2.3650954, -2.6217272],
                                  [-0.74930567, 4.9494185, -9.2663355, -4.951261]],
                                 dtype=np.float32),
        torch_layer_output=np.array([[6.232889, -4.2662907, 3.564962, -0.32303083],
                                     [-4.166363, 6.0028048, 4.513016, -4.158601]],
                                    dtype=np.float32),
        torch_layer_grad=np.array([[0.38911694, -1.9477923, -2.2713766],
                                   [6.12846, 1.6314325, 1.0379164]], dtype=np.float32),
        torch_weight_grad=np.array([[19.020613, 16.288033, -11.508921],
                                    [27.292103, -29.847445, -30.666668],
                                    [-66.770996, 47.912567, 68.349236],
                                    [-1.569294, 42.939697, 12.726223]], dtype=np.float32),
        torch_bias_grad=np.array([-3.3398638, 4.6398783, -6.9012403, -7.5729885], dtype=np.float32)),
    Case(
        weight=np.array([[-0.07108766, 0.2769584, -0.26720467],
                         [-0.06295419, -0.05025518, -0.13659146],
                         [-0.29273516, -0.51467216, -0.4667051],
                         [-0.30914894, 0.5576266, -0.27886868]], dtype=np.float32),
        bias=np.array([-0.38770688, 0.13994634, 0.15912372, 0.31633586], dtype=np.float32),
        input=np.array([[1.8718491, 3.5820463, 5.783425],
                        [-0.03115602, -8.261594, 0.7421308]], dtype=np.float32),
        next_layer_grad=np.array([[1.7368224, 4.9087896, -1.3668091, -7.448394],
                                  [-4.324482, -2.738354, 2.9183447, 1.4155661]], dtype=np.float32),
        torch_layer_output=np.array([[-1.0740526, -0.9478773, -4.9315658, 0.122284],
                                     [-2.8719106, 0.4557269, 4.0739, -4.487874]], dtype=np.float32),
        torch_layer_grad=np.array([[2.2702806, -3.2156284, 1.5804346],
                                   [-0.8121147, -1.7727184, -0.22720593]], dtype=np.float32),
        torch_weight_grad=np.array([[3.385803, 41.94849, 6.83545],
                                    [9.273829, 40.20668, 26.357399],
                                    [-2.6493845, -29.006151, -5.739044],
                                    [-13.986373, -38.37532, -42.026688]], dtype=np.float32),
        torch_bias_grad=np.array([-2.5876596, 2.1704357, 1.5515356, -6.032828], dtype=np.float32)),
    Case(
        weight=np.array([[0.43885565, 0.32151145, -0.57244337],
                         [0.05120438, 0.34973168, -0.05336189],
                         [-0.34022048, 0.550411, -0.21594507],
                         [-0.3287112, -0.52051306, 0.02578926]], dtype=np.float32),
        bias=np.array([0.25584304, 0.12780386, 0.11417085, -0.43785518], dtype=np.float32),
        input=np.array([[-7.759222, -2.042888, 9.389409],
                        [7.3101425, 6.3414416, -4.8419433]], dtype=np.float32),
        next_layer_grad=np.array([[-6.582248, 3.3728645, 8.58752, 1.1352578],
                                  [1.4322538, -4.4004183, 5.3898587, -6.259125]], dtype=np.float32),
        torch_layer_output=np.array([[-9.181052, -1.4850016, -0.3980072, 3.4181838],
                                     [8.274525, 2.9782934, 2.1631033, -6.266454]], dtype=np.float32),
        torch_layer_grad=np.array([[-6.0107737, 3.199078, 1.7628269],
                                   [0.6269362, 5.1461143, -1.9104011]], dtype=np.float32),
        torch_weight_grad=np.array([[61.543102, 22.52935, -68.73831],
                                    [-58.338493, -34.79538, 52.97578],
                                    [-27.231834, 16.636133, 54.534348],
                                    [-54.563812, -42.01108, 40.96573]], dtype=np.float32),
        torch_bias_grad=np.array([-5.1499944, -1.0275538, 13.977379, -5.1238675], dtype=np.float32)),
    Case(
        weight=np.array([[-0.53918004, 0.01016676, 0.52644765],
                         [0.33308572, -0.3361531, -0.07494497],
                         [-0.4256131, -0.2785273, 0.10455716],
                         [0.31438947, 0.4782592, -0.53006876]], dtype=np.float32),
        bias=np.array([0.3860252, -0.40720057, 0.21619874, 0.48858], dtype=np.float32),
        input=np.array([[-3.5529232, 6.197489, -4.907187],
                        [3.6300545, 5.2045574, 1.9127748]], dtype=np.float32),
        next_layer_grad=np.array([[-0.5684762, -1.7631817, -3.0226347, 8.590583],
                                  [6.612388, 9.300538, -7.5140557, 4.6173496]], dtype=np.float32),
        torch_layer_output=np.array([[-0.21867824, -3.3061647, -0.5108818, 4.9367304],
                                     [-0.51133835, -1.0909622, -2.578417, 3.105056]],
                                    dtype=np.float32),
        torch_layer_grad=np.array([[3.7064822, 5.537331, -5.036769],
                                   [4.182335, 1.2419815, -0.4491136]], dtype=np.float32),
        torch_weight_grad=np.array([[26.02308, 30.89143, 15.437628],
                                    [40.02591, 37.477886, 26.442097],
                                    [-16.537243, -57.84008, 0.4599371],
                                    [-13.76045, 77.2713, -33.323647]], dtype=np.float32),
        torch_bias_grad=np.array([6.043912, 7.5373564, -10.536691, 13.207932], dtype=np.float32)),
    Case(
        weight=np.array([[0.00810736, 0.52527845, -0.49193215],
                         [-0.22052425, 0.3367412, -0.12578607],
                         [-0.11818373, -0.24063477, 0.3979711],
                         [0.28319216, 0.18501192, -0.32444987]], dtype=np.float32),
        bias=np.array([-0.4686638, 0.06244653, 0.17105669, -0.26656947], dtype=np.float32),
        input=np.array([[-2.1510978, 6.331989, -1.2173018],
                        [-2.4611113, -0.7464043, -3.9724426]], dtype=np.float32),
        next_layer_grad=np.array([[4.9521875, 0.0544078, -5.3557463, 7.9914913],
                                  [-2.3221755, 0.8710572, 8.129442, 2.4847598]], dtype=np.float32),
        torch_layer_output=np.array([[3.4387836, 2.822177, -1.5828662, 0.6907034],
                                     [1.0734853, 0.85351413, -0.93938655, 0.18722793]],
                                    dtype=np.float32),
        torch_layer_grad=np.array([[2.9242406, 5.386899, -7.1672544],
                                   [-0.4680193, -2.4229844, 3.461889]], dtype=np.float32),
        torch_weight_grad=np.array([[-4.937507, 33.090477, 3.1964016],
                                    [-2.2608054, -0.30565125, -3.5264556],
                                    [-8.486728, -39.980377, -25.774183],
                                    [-23.30575, 48.747395, -19.598621]], dtype=np.float32),
        torch_bias_grad=np.array([2.630012, 0.925465, 2.773696, 10.476252], dtype=np.float32)),
]
